# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Solution 2 - Python style
num1 = 1
num2 = 1
ans = 0
while (num2 <= 4000000):
    # print(num1, num2)
    num1, num2 = num2, num1 + num2
    if num2 % 2 == 0:
        ans = ans + num2
print(ans)


# Solution 1 - C style, stores the full sequence
fib = []
fib_even = 0
curr_num = 1
i = 1
while (curr_num <= 4000000):
    if (i <= 2):
        curr_num = 1
        fib.append(curr_num)
    else:
        curr_num = fib[i-1-1] + fib[i-1-2]
        fib.append(curr_num)
    if curr_num % 2 == 0 :
        fib_even = fib_even + curr_num
    # print(i, curr_num, fib_even)
    i = i + 1

print(fib_even)




