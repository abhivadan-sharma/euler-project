

# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

import math


def all_factors(n):
	factors = []
	for i in range(1, int(math.sqrt(n))+1):
		if n % i == 0:
			factors.append(i)
			factors.append(n / i)
	return factors


all_factors(28)

n = 1
num_factors = 1
n_limit = 500
while num_factors < n_limit :
	triangle_num = n * (n+1) / 2
	num_factors = len(all_factors(triangle_num))
	if num_factors > n_limit :
		num_factors = n_limit + 1
	else:
		n = n + 1
print(triangle_num, num_factors)